/*! interp.js - v0.1.0 - 2012-11-04
* https://github.com/modosc/interp.js
* Copyright (c) 2012 Jonathan Schatz; Licensed MIT */
var Interp=Interp||{};Interp.Point=function(e,t){if(e===undefined||typeof e!="number")throw new Error("x is required and must be numeric");if(t===undefined||typeof t!="number")throw new Error("y is required and must be numeric");return this.x=e,this.y=t,this},Interp.Point.prototype.equal=function(e){if(!(e&&e instanceof Interp.Point))throw new Error("a is required and must be an Interp.Point");return this.x===e.x&&this.y===e.y},Interp.Point.prototype.between=function(e,t){return Interp.isPoint(e,"a"),Interp.isPoint(t,"b"),e.x<t.x?e.x<=this.x&&t.x>=this.x:t.x<=this.x&&e.x>=this.x};var Interp=Interp||{};Interp.isPoint=function(e,t){if(!(e&&e instanceof Interp.Point))throw new Error(t+" is required and must be an Interp.Point")},Interp.isDiff=function(e,t,n,r){if(e===t)throw new Error(n+" and "+r+" must have different values")},Interp.isReqNum=function(e,t){if(e===undefined||typeof e!="number")throw new Error(t+" is required and must be numeric")},Interp.inDomain=function(e,t,n){if(t.x<n.x&&(e<t.x||e>n.x)||n.x<t.x&&(e<n.x||e>t.x))throw new Error("x is out of our domain")};var Interp=Interp||{};Interp.Lin=function(e,t){Interp.isPoint(e,"a"),Interp.isPoint(t,"b"),Interp.isDiff(e.x,t.x,"a.x","b.x"),this.a=e,this.b=t,this.interp=function(n){return Interp.isReqNum(n,"x"),Interp.inDomain(n,e,t),e.y+(n-e.x)*(t.y-e.y)/(t.x-e.x)}};var Interp=Interp||{};Interp.Exp=function(e,t){Interp.isPoint(e,"a"),Interp.isPoint(t,"b"),Interp.isDiff(e.x,t.x,"a.x","b.x"),Interp.isDiff(e.y,t.y,"a.y","b.y"),this.a=e,this.b=t,this.shiftCheck=!1,this.shiftY=0,this.interp=function(n){Interp.isReqNum(n,"x"),Interp.inDomain(n,e,t);var r=e.y,i=t.y;if(!this.shiftCheck){while(r<=0||i<=0)r++,i++,this.shiftY++;this.shiftCheck=!0}else r+=this.shiftY,i+=this.shiftY;var s=r*Math.pow(i/r,(n-e.x)/(t.x-e.x));return s-=this.shiftY,s}};var Interp=Interp||{};Interp.Log=function(e,t){Interp.isPoint(e,"a"),Interp.isPoint(t,"b"),Interp.isDiff(e.x,t.x,"a.x","b.x"),Interp.isDiff(e.y,t.y,"a.y","b.y"),this.a=e,this.b=t,this.shiftCheck=!1,this.shiftX=0,this.interp=function(n){Interp.isReqNum(n,"x"),Interp.inDomain(n,e,t);var r=e.x,i=t.x,s=n;if(!this.shiftCheck){while(r<=0||i<=0)r++,i++,s++,this.shiftX++;this.shiftCheck=!0}else r+=this.shiftX,i+=this.shiftX,s+=this.shiftX;var o=e.y+(Math.log(s)-Math.log(r))*(t.y-e.y)/(Math.log(i)-Math.log(r));return o}};var Interp=Interp||{};Interp.Cos=function(e,t){if(!(e&&e instanceof Interp.Point))throw new Error("a is required and must be an Interp.Point");if(!(t&&t instanceof Interp.Point))throw new Error("b is required and must be an Interp.Point");if(e.x===t.x)throw new Error("a and b must have different x coordinates");if(e.x===t.x)throw new Error("a and b must have different y coordinates");this.a=e,this.b=t,this.shiftCheck=!1,this.shiftX=0,this.interp=function(n){if(n===undefined||typeof n!="number")throw new Error("x is required and must be numeric");if(e.x<t.x&&(n<e.x||n>t.x)||t.x<e.x&&(n<t.x||n>e.x))throw new Error("x is out of our domain");var r=e.x,i=t.x,s=n;if(!this.shiftCheck){while(r<=0||i<=0)r++,i++,s++,this.shiftX++;this.shiftCheck=!0}else r+=this.shiftX,i+=this.shiftX,s+=this.shiftX;var o=(s-r)/(i-r),u=(1-Math.cos(o*Math.PI))/2,f=e.y*(1-u)+t.y*u;return f}};var Interp=Interp||{};Interp.Cub=function(e,t,n,r){Interp.isPoint(e,"z"),Interp.isPoint(t,"a"),Interp.isPoint(n,"b"),Interp.isPoint(r,"c"),Interp.isDiff(t.x,n.x,"a.x","b.x"),Interp.isDiff(t.y,n.y,"a.y","b.y");if(!t.between(e,n))throw new Error("a must be between z and b");if(!n.between(t,r))throw new Error("b must be between a and c");this.a=t,this.b=n,this.c=r,this.z=e,this.shiftCheck=!1,this.shiftX=0,this.interp=function(i){Interp.isReqNum(i,"x"),Interp.inDomain(i,t,n);var s=t.x,o=n.x,u=i;if(!this.shiftCheck){while(s<=0||o<=0)s++,o++,u++,this.shiftX++;this.shiftCheck=!0}else s+=this.shiftX,o+=this.shiftX,u+=this.shiftX;var f=(u-s)/(o-s),l=f*f,h=r.y-n.y-e.y+t.y,p=e.y-t.y-h,d=n.y-e.y,v=t.y,m=h*f*l+p*l+d*f+v;return m}};